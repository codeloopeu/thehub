/*
 * This file is generated by jOOQ.
 */
package eu.codeloop.thehub.jooq.tables.records;


import eu.codeloop.thehub.jooq.tables.JobPerks;

import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobPerksRecord extends UpdatableRecordImpl<JobPerksRecord> implements Record4<String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = -597528306;

    /**
     * Setter for <code>public.job_perks.job_perk_id</code>.
     */
    public JobPerksRecord setJobPerkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.job_perks.job_perk_id</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getJobPerkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.job_perks.description</code>.
     */
    public JobPerksRecord setDescription(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.job_perks.description</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.job_perks.date_created</code>.
     */
    public JobPerksRecord setDateCreated(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.job_perks.date_created</code>.
     */
    public OffsetDateTime getDateCreated() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.job_perks.date_modified</code>.
     */
    public JobPerksRecord setDateModified(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.job_perks.date_modified</code>.
     */
    public OffsetDateTime getDateModified() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return JobPerks.JOB_PERKS.JOB_PERK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return JobPerks.JOB_PERKS.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field3() {
        return JobPerks.JOB_PERKS.DATE_CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field4() {
        return JobPerks.JOB_PERKS.DATE_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getJobPerkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component3() {
        return getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component4() {
        return getDateModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getJobPerkId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value3() {
        return getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value4() {
        return getDateModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobPerksRecord value1(String value) {
        setJobPerkId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobPerksRecord value2(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobPerksRecord value3(OffsetDateTime value) {
        setDateCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobPerksRecord value4(OffsetDateTime value) {
        setDateModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobPerksRecord values(String value1, String value2, OffsetDateTime value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobPerksRecord
     */
    public JobPerksRecord() {
        super(JobPerks.JOB_PERKS);
    }

    /**
     * Create a detached, initialised JobPerksRecord
     */
    public JobPerksRecord(String jobPerkId, String description, OffsetDateTime dateCreated, OffsetDateTime dateModified) {
        super(JobPerks.JOB_PERKS);

        set(0, jobPerkId);
        set(1, description);
        set(2, dateCreated);
        set(3, dateModified);
    }
}
