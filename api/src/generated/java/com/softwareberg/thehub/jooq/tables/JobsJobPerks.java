/*
 * This file is generated by jOOQ.
 */
package com.softwareberg.thehub.jooq.tables;


import com.softwareberg.thehub.jooq.Indexes;
import com.softwareberg.thehub.jooq.Keys;
import com.softwareberg.thehub.jooq.Public;
import com.softwareberg.thehub.jooq.tables.records.JobsJobPerksRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobsJobPerks extends TableImpl<JobsJobPerksRecord> {

    private static final long serialVersionUID = -1859615587;

    /**
     * The reference instance of <code>public.jobs_job_perks</code>
     */
    public static final JobsJobPerks JOBS_JOB_PERKS = new JobsJobPerks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobsJobPerksRecord> getRecordType() {
        return JobsJobPerksRecord.class;
    }

    /**
     * The column <code>public.jobs_job_perks.job_perk_id</code>.
     */
    public final TableField<JobsJobPerksRecord, String> JOB_PERK_ID = createField("job_perk_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.jobs_job_perks.job_id</code>.
     */
    public final TableField<JobsJobPerksRecord, String> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.jobs_job_perks.date_created</code>.
     */
    public final TableField<JobsJobPerksRecord, OffsetDateTime> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column <code>public.jobs_job_perks.date_modified</code>.
     */
    public final TableField<JobsJobPerksRecord, OffsetDateTime> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>public.jobs_job_perks</code> table reference
     */
    public JobsJobPerks() {
        this(DSL.name("jobs_job_perks"), null);
    }

    /**
     * Create an aliased <code>public.jobs_job_perks</code> table reference
     */
    public JobsJobPerks(String alias) {
        this(DSL.name(alias), JOBS_JOB_PERKS);
    }

    /**
     * Create an aliased <code>public.jobs_job_perks</code> table reference
     */
    public JobsJobPerks(Name alias) {
        this(alias, JOBS_JOB_PERKS);
    }

    private JobsJobPerks(Name alias, Table<JobsJobPerksRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobsJobPerks(Name alias, Table<JobsJobPerksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JobsJobPerks(Table<O> child, ForeignKey<O, JobsJobPerksRecord> key) {
        super(child, key, JOBS_JOB_PERKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JOBS_JOB_PERKS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobsJobPerksRecord> getPrimaryKey() {
        return Keys.JOBS_JOB_PERKS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobsJobPerksRecord>> getKeys() {
        return Arrays.<UniqueKey<JobsJobPerksRecord>>asList(Keys.JOBS_JOB_PERKS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JobsJobPerksRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JobsJobPerksRecord, ?>>asList(Keys.JOBS_JOB_PERKS__JOBS_JOB_PERKS_JOB_PERK_ID_FKEY, Keys.JOBS_JOB_PERKS__JOBS_JOB_PERKS_JOB_ID_FKEY);
    }

    public JobPerks jobPerks() {
        return new JobPerks(this, Keys.JOBS_JOB_PERKS__JOBS_JOB_PERKS_JOB_PERK_ID_FKEY);
    }

    public Jobs jobs() {
        return new Jobs(this, Keys.JOBS_JOB_PERKS__JOBS_JOB_PERKS_JOB_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsJobPerks as(String alias) {
        return new JobsJobPerks(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsJobPerks as(Name alias) {
        return new JobsJobPerks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobsJobPerks rename(String name) {
        return new JobsJobPerks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JobsJobPerks rename(Name name) {
        return new JobsJobPerks(name, null);
    }
}
